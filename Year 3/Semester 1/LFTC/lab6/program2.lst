     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit
     5                                  import exit msvcrt.dll
     6                                  extern scanf
     7                                  import scanf msvcrt.dll
     8                                  extern printf
     9                                  import printf msvcrt.dll
    10                                  
    11                                  segment data use32 class=data
    12 00000000 256400                  	format db "%d", 0
    13 00000003 00<rept>                	 a times 4 db 0 
    14 00000007 00<rept>                	 temp1 times 4 db 0 
    15 0000000B 00<rept>                	 temp2 times 4 db 0 
    16 0000000F 00<rept>                	 temp3 times 4 db 0 
    17 00000013 00<rept>                	 temp4 times 4 db 0 
    18 00000017 00<rept>                	 temp5 times 4 db 0 
    19                                  
    20                                  segment code use32 class=code
    21                                  	start:
    22 00000000 68[03000000]            		push dword a 
    23 00000005 68[00000000]            		push dword format 
    24 0000000A FF15[00000000]          		call [scanf] 
    25 00000010 83C408                  		add ESP, 4 * 2 
    26                                  
    27                                  
    28                                  
    29 00000013 B003                    		mov al, 3 
    30 00000015 B400                    		mov ah, 0 
    31 00000017 8A15[03000000]          		mov dl, [a] 
    32 0000001D F6E2                    		mul dl 
    33 0000001F A2[07000000]            		mov [temp1], al 
    34                                  
    35 00000024 B002                    		mov al, 2 
    36 00000026 0205[07000000]          		add al, [temp1] 
    37 0000002C A2[0B000000]            		mov [temp2], al 
    38                                  
    39                                  
    40 00000031 A0[0B000000]            		mov al, [temp2] 
    41 00000036 0403                    		add al, 3 
    42 00000038 A2[0F000000]            		mov [temp3], al 
    43                                  
    44                                  
    45                                  
    46 0000003D B004                    		mov al, 4 
    47 0000003F B400                    		mov ah, 0 
    48 00000041 B202                    		mov dl, 2 
    49 00000043 F6F2                    		div dl 
    50 00000045 A2[13000000]            		mov [temp4], al 
    51                                  
    52 0000004A A0[0F000000]            		mov al, [temp3] 
    53 0000004F 2A05[13000000]          		sub al, [temp4] 
    54 00000055 A2[17000000]            		mov [temp5], al 
    55 0000005A A0[17000000]            		mov al, [temp5]
    56 0000005F A2[03000000]            		mov [a], al
    57                                  
    58 00000064 FF35[03000000]          		push dword [a] 
    59 0000006A 68[00000000]            		push dword format 
    60 0000006F FF15[00000000]          		call [printf] 
    61 00000075 83C408                  		add ESP, 4 * 2 
    62                                  
    63 00000078 6A00                    		push dword 0
    64 0000007A FF15[00000000]          		call [exit]
