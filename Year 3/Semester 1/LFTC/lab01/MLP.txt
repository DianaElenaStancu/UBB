<program>           ::= <antet><instr_comp>
<antet>             ::= #include<iostream> using namespace std; int main()
<instr_comp>        ::= {<lista_instr>}
<lista_instr>       ::= <instr>; | <instr>;<lista_instr>
<instr>             ::= <instr_input> | <instr_output> | <instr_decl> | <instr_atrib> | <instr_loop> | <op_return>
<instr_input>       ::= cin >> ID;
<instr_output>      ::= cout << ID;
<tip_data>          ::= int | float
<instr_decl>        ::= <tip_data> ID;
<instr_atrib>       ::= ID = <expr>;
<expr>              ::= ID | CONST | <expr> <op_binar> <expr>
<op_binar>          ::= + | - | * | / | %
<instr_loop>        ::= while(<expr_bool>) <instr>
<expr_bool>         ::= <expr> <op_comp> <expr>
<op_comp>           ::= < | <= | == | != | >= | >
<op_return>         ::= return 0
<instr_decl_comp>   ::= struct <tip_data> { <instr_decl> }
<cifra>             ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9
<const_nat>         ::= <cifra> | <cifra><const_int>
<const_int>         ::= <const_nat> | - <const_nat>
<const_float>       ::= <const_int> | 0,<const_nat>
<binary_digit>      ::= 0 | 1
<binary_sequence>   ::= <binary_digit><binary_sequence>
<binary_literal>    ::= 0b<binary_sequence> | 0B<binary_sequence>
<octal_digit>       ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7
<octal_sequence>    ::= <octal_digit><octal_sequence>
<octal_literal>     ::= 0<octal_sequence>
<hex_digit>         ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | A | B | C | D | E | F | a | b | c | d | e | f
<hex_sequence>      ::= <hex_digit><hex_sequence>
<hex_literal>       ::= 0x<hex_sequence> | 0X<hex_sequence>











-----------------
A;B;C;D
A
C;D
30
A;D;0
A;B;-
A;C;1
A;C;2
A;C;3
A;C;4
A;C;5
A;C;6
A;C;7
A;C;8
A;C;9
B;C;1
B;C;2
B;C;3
B;C;4
B;C;5
B;C;6
B;C;7
B;C;8
B;C;9
C;C;0
C;C;1
C;C;2
C;C;3
C;C;4
C;C;5
C;C;6
C;C;7
C;C;8
C;C;9
